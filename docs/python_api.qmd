---
title: "Python API"
---

Here is a list of `ACE` classes and methods:

| Class                                   | Description                                                                     |
| --------------------------------------- | ------------------------------------------------------------------------------- |
| [AIDPlateReader](#aidplatereader)       | AID plate reader.                                                               |
| [ELISpot](#elispot)                     | An ELISpot.                                                                     |

<br/>

## AIDPlateReader

### load_readout_file

Loads an AID plate reader readout file.

```python
@staticmethod
load_readout_file(
    excel_file: str,
    plate_id: int
) -> pd.DataFrame
```

| Input                          | Description                                                                              |
| ------------------------------ | ---------------------------------------------------------------------------------------- |
| `excel_file`                   | AID plate reader results Excel file.                                                     |
| `plate_id`                     | Plate ID (e.g. 1).                                                                       |

| Output                         | Description                                                                              |
| ------------------------------ | ---------------------------------------------------------------------------------------- |
| `df_counts`                    | DataFrame with the following columns: 'plate_id', 'well_id', 'spot_count'.               |

<br/>

## ELISpot

### assign_well_ids

Assign well IDs to an ELISpot experiment configuration.

```python
@staticmethod
assign_well_ids(
    df_configuration: pd.DataFrame,
    plate_type: str
) -> pd.DataFrame
```

| Input                          | Description                                                                              |
| ------------------------------ | ---------------------------------------------------------------------------------------- |
| `df_configuration`             | DataFrame with the following columns: 'pool_id', 'peptide_id'.                           |
| `plate_type`                   | Plate type (allowed values: '96-well_plate').                                            |

| Output                         | Description                                                                              |
| ------------------------------ | ---------------------------------------------------------------------------------------- |
| `df_configuration`             | DataFrame with the following columns: 'pool_id', 'peptide_id', 'plate_id', 'well_id'.    |

### generate_configuration

Generate an ELISpot experiment configuration.

```python
generate_configuration(
    self, random_seed: int,
    disallowed_peptide_pairs: List[Tuple[str,str]] = [],
    enforced_peptide_pairs: List[Tuple[str,str]] = []
) -> pd.DataFrame
```

| Input                          | Description                                                                              |
| ------------------------------ | ---------------------------------------------------------------------------------------- |
| `random_seed`                  | Random seed.                                                                             |
| `disallowed_peptide_pairs`     | List of tuples (peptide ID, peptide ID).                                                 |
| `enforced_peptide_pairs`       | List of tuples (peptide ID, peptide ID).                                                 |

| Output                         | Description                                                                                                              |
| ------------------------------ | ------------------------------------------------------------------------------------------------------------------------ |
| `status`                       | Status (`cp_model.OPTIMAL`, `cp_model.FEASIBLE`, `cp_model.INFEASIBLE`, `cp_model.MODEL_INVALID` or `cp_model.UNKNOWN`). |
| `df_configuration`             | DataFrame with the following columns: 'pool_id', 'peptide_id'.                                                           |

### identify_hit_peptides

Identify hit peptides.

```python
@staticmethod
identify_hit_peptides(
    hit_pool_ids: List[str], 
    df_configuration: pd.DataFrame
) -> pd.DataFrame:
```

| Input                          | Description                                                                                              |
| ------------------------------ | -------------------------------------------------------------------------------------------------------- |
| `hit_pool_ids`                 | List of hit pool IDs.                                                                                    |
| `df_configuration`             | DataFrame with the following columns: 'pool_id', 'peptide_id'.                                           |

| Output                         | Description                                                                                              |
| ------------------------------ | -------------------------------------------------------------------------------------------------------- |
| `df_hits`                      | DataFrame with the following columns: 'peptide_id', 'pool_ids', 'num_coverage', 'deconvolution_result'   |

### verify_configuration

Verify an ELIspot configuration.

```python
@staticmethod
verify_configuration(
    df_configuration: pd.DataFrame,
    num_peptides_per_pool: int,
    num_coverage: int
) -> bool:
```

| Input                          | Description                                                                              |
| ------------------------------ | ---------------------------------------------------------------------------------------- |
| `df_configuration`             | DataFrame with the following columns: 'pool_id', 'peptide_id'.                           |
| `num_peptides_per_pool`        | Number of peptides per pool.                                                             |
| `num_coverage`                 | Coverage.                                                                                |

| Output                         | Description                                                                              |
| ------------------------------ | ---------------------------------------------------------------------------------------- |
| `is_optimal`                   | True if the ELIspot configuration meets the following criteria:<br/>(1) Each peptide is in 'num_coverage' number of different pools.<br/>(2) Each peptide is in exactly one unique combination of pool IDs.<br/>(3) There is an optimal (minimal) number of pools.<br/><br/>False otherwise. |
